/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Alignment, Placement, } from "./helpers/style";
export namespace Components {
    interface PixelButton {
        "accent": boolean;
        "autofocus": boolean;
        "backgroundColor": string;
        "borderColor": string;
        "color": string;
        "disabled": boolean;
        "flat": boolean;
        "outlined": boolean;
        "primary": boolean;
        "raised": boolean;
        "secondary": boolean;
        "theme": string;
    }
    interface PixelIcon {
        "grayscale": boolean;
        "svg": boolean;
    }
    interface PixelToggle {
        "accent": boolean;
        "autofocus": boolean;
        "backgroundColor": string;
        "borderColor1": string;
        "borderColor2": string;
        "checked": boolean;
        "color": string;
        "disabled": boolean;
        "primary": boolean;
        "secondary": boolean;
    }
    interface PixelTooltip {
        "alignX": Alignment;
        "alignY": Alignment;
        "backgroundColor": string;
        "borderColor": string;
        "color": string;
        "for": HTMLElement | string;
        "offsetX": number | string;
        "offsetY": number | string;
        "offsetZ": string;
        "placement": Placement;
    }
}
declare global {
    interface HTMLPixelButtonElement extends Components.PixelButton, HTMLStencilElement {
    }
    var HTMLPixelButtonElement: {
        prototype: HTMLPixelButtonElement;
        new (): HTMLPixelButtonElement;
    };
    interface HTMLPixelIconElement extends Components.PixelIcon, HTMLStencilElement {
    }
    var HTMLPixelIconElement: {
        prototype: HTMLPixelIconElement;
        new (): HTMLPixelIconElement;
    };
    interface HTMLPixelToggleElement extends Components.PixelToggle, HTMLStencilElement {
    }
    var HTMLPixelToggleElement: {
        prototype: HTMLPixelToggleElement;
        new (): HTMLPixelToggleElement;
    };
    interface HTMLPixelTooltipElement extends Components.PixelTooltip, HTMLStencilElement {
    }
    var HTMLPixelTooltipElement: {
        prototype: HTMLPixelTooltipElement;
        new (): HTMLPixelTooltipElement;
    };
    interface HTMLElementTagNameMap {
        "pixel-button": HTMLPixelButtonElement;
        "pixel-icon": HTMLPixelIconElement;
        "pixel-toggle": HTMLPixelToggleElement;
        "pixel-tooltip": HTMLPixelTooltipElement;
    }
}
declare namespace LocalJSX {
    interface PixelButton {
        "accent"?: boolean;
        "autofocus"?: boolean;
        "backgroundColor"?: string;
        "borderColor"?: string;
        "color"?: string;
        "disabled"?: boolean;
        "flat"?: boolean;
        "outlined"?: boolean;
        "primary"?: boolean;
        "raised"?: boolean;
        "secondary"?: boolean;
        "theme"?: string;
    }
    interface PixelIcon {
        "grayscale"?: boolean;
        "svg"?: boolean;
    }
    interface PixelToggle {
        "accent"?: boolean;
        "autofocus"?: boolean;
        "backgroundColor"?: string;
        "borderColor1"?: string;
        "borderColor2"?: string;
        "checked"?: boolean;
        "color"?: string;
        "disabled"?: boolean;
        "primary"?: boolean;
        "secondary"?: boolean;
    }
    interface PixelTooltip {
        "alignX"?: Alignment;
        "alignY"?: Alignment;
        "backgroundColor"?: string;
        "borderColor"?: string;
        "color"?: string;
        "for"?: HTMLElement | string;
        "offsetX"?: number | string;
        "offsetY"?: number | string;
        "offsetZ"?: string;
        "placement"?: Placement;
    }
    interface IntrinsicElements {
        "pixel-button": PixelButton;
        "pixel-icon": PixelIcon;
        "pixel-toggle": PixelToggle;
        "pixel-tooltip": PixelTooltip;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "pixel-button": LocalJSX.PixelButton & JSXBase.HTMLAttributes<HTMLPixelButtonElement>;
            "pixel-icon": LocalJSX.PixelIcon & JSXBase.HTMLAttributes<HTMLPixelIconElement>;
            "pixel-toggle": LocalJSX.PixelToggle & JSXBase.HTMLAttributes<HTMLPixelToggleElement>;
            "pixel-tooltip": LocalJSX.PixelTooltip & JSXBase.HTMLAttributes<HTMLPixelTooltipElement>;
        }
    }
}
